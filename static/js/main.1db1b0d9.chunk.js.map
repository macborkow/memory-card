{"version":3,"sources":["components/Card.js","App.js","index.js"],"names":["Card","props","name","imgUrl","processCardClick","style","width","height","backgroundColor","margin","display","alignItems","flexDirection","justifyContent","cursor","borderRadius","textAlign","onClick","src","alt","App","useState","score","setScore","record","setRecord","clicked","setClicked","cards","setCards","find","item","loadCards","temp","i","length","j","Math","floor","random","nameBase","promiseList","tempCards","foo","getRandomFruitsName","fetch","mode","then","response","json","url","data","images","original","catch","e","Promise","all","useEffect","className","flexWrap","map","key","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mOAsCeA,EApCF,SAACC,GAAW,IACfC,EAAmCD,EAAnCC,KAAMC,EAA6BF,EAA7BE,OAAQC,EAAqBH,EAArBG,iBAEtB,OACE,sBACEC,MAAO,CACLC,MAAO,QACPC,OAAQ,QACRC,gBAAiB,OACjBC,OAAQ,OACRC,QAAS,OACTC,WAAY,SACZC,cAAe,SACfC,eAAgB,SAChBC,OAAQ,YACRC,aAAc,OACdC,UAAW,UAEbC,QAAS,WACPb,EAAiBF,IAfrB,UAkBE,qBACEG,MAAO,CACLC,MAAO,MACPC,OAAQ,MACRQ,aAAc,QAEhBG,IAAKf,EACLgB,IAAI,KAEN,4BAAIjB,Q,gBC4EKkB,G,MAxGH,WAAO,IAAD,EACUC,mBAAS,GADnB,mBACTC,EADS,KACFC,EADE,OAEYF,mBAAS,GAFrB,mBAETG,EAFS,KAEDC,EAFC,OAGcJ,mBAAS,IAHvB,mBAGTK,EAHS,KAGAC,EAHA,OAIUN,mBAAS,IAJnB,mBAITO,EAJS,KAIFC,EAJE,KAMVzB,EAAmB,SAACF,GACpBwB,EAAQI,MAAK,SAACC,GAAD,OAAUA,IAAS7B,MAClCqB,EAAS,GACTI,EAAW,IACXK,MAEAL,GAAW,SAACD,GAAD,4BAAiBA,GAAjB,CAA0BxB,OACrCqB,EAASD,EAAQ,GACbE,EAASF,EAAQ,GACnBG,EAAUH,EAAQ,GAEjBA,EAAM,IAAM,IACbC,EAAS,mBAKb,IADA,IAAIU,EAAOL,EACFM,EAAID,EAAKE,OAAS,EAAGD,EAAI,EAAGA,IAAK,CACxC,IAAME,EAAIC,KAAKC,MAAMD,KAAKE,UAAYL,EAAI,IADF,EAEnB,CAACD,EAAKG,GAAIH,EAAKC,IAAnCD,EAAKC,GAFkC,KAE9BD,EAAKG,GAFyB,KAGxCP,EAASI,KAIPD,EAAY,WAIhB,IAHA,IAAIQ,EAAW,GACXC,EAAc,GACdC,EAAY,GAHM,WAIbR,GACP,IAAIS,OAAG,EACP,GACEA,EAAMC,YACCJ,EAASV,MAAK,SAACC,GAAD,OAAUA,IAASY,MAE1CH,EAAQ,sBAAOA,GAAP,CAAiBG,IAEzBF,EACEP,GACEW,MACF,sFACEF,EACF,CAAEG,KAAM,SAEPC,MAAK,SAACC,GACL,OAAOA,EAASC,UAEjBF,MAAK,SAACC,GACLN,EAAS,sBACJA,GADI,CAEP,CAAExC,KAAMyC,EAAKO,IAAKF,EAASG,KAAKC,OAAOC,SAASH,UAGnDI,OAAM,SAACC,GACN,MAAMA,MAzBHrB,EAAI,EAAGA,EAAI,GAAIA,IAAM,EAArBA,GA6BTsB,QAAQC,IAAR,UAAgBhB,IAAcM,MAAK,WACjClB,EAASa,OAQb,OAJAgB,qBAAU,WACR1B,MACC,IAGD,sBACE3B,MAAO,CACLK,QAAS,OACTC,WAAY,SACZC,cAAe,UAJnB,UAOE,wCAAWU,KACX,yCAAYE,KACZ,qBACEmC,UAAU,QACVtD,MAAO,CACLK,QAAS,OACTE,cAAe,MACfgD,SAAU,OACVtD,MAAO,OANX,SASGsB,EAAMiC,KAAI,SAAC9B,EAAM+B,GAAP,OACT,cAAC,EAAD,CACE5D,KAAM6B,EAAK7B,KACXC,OAAQ4B,EAAKmB,IAEb9C,iBAAkBA,GADb0D,aC/FjBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.1db1b0d9.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst Card = (props) => {\n  const { name, imgUrl, processCardClick } = props;\n\n  return (\n    <div\n      style={{\n        width: \"200px\",\n        height: \"200px\",\n        backgroundColor: \"#222\",\n        margin: \"10px\",\n        display: \"flex\",\n        alignItems: \"center\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        cursor: \"crosshair\",\n        borderRadius: \"20px\",\n        textAlign: 'center',\n      }}\n      onClick={() => {\n        processCardClick(name);\n      }}\n    >\n      <img\n        style={{\n          width: \"70%\",\n          height: \"70%\",\n          borderRadius: \"20px\",\n        }}\n        src={imgUrl}\n        alt=\"\"\n      ></img>\n      <p>{name}</p>\n    </div>\n  );\n};\n\nexport default Card;\n","import React, { useState, useEffect } from \"react\";\nimport Card from \"./components/Card\";\nimport getRandomFruitsName from \"random-fruits-name\";\nimport \"./App.css\";\n\nconst App = () => {\n  const [score, setScore] = useState(0);\n  const [record, setRecord] = useState(0);\n  const [clicked, setClicked] = useState([]);\n  const [cards, setCards] = useState([]);\n\n  const processCardClick = (name) => {\n    if (clicked.find((item) => item === name)) {\n      setScore(0);\n      setClicked([]);\n      loadCards();\n    } else {\n      setClicked((clicked) => [...clicked, name]);\n      setScore(score + 1);\n      if (record < score + 1) {\n        setRecord(score + 1);\n      }\n      if(score+1 === 12) {\n        setScore('12 ! Good job.')\n      }\n    }\n\n    let temp = cards;\n    for (let i = temp.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [temp[i], temp[j]] = [temp[j], temp[i]];\n      setCards(temp);\n    }\n  };\n\n  const loadCards = () => {\n    let nameBase = [];\n    let promiseList = [];\n    let tempCards = [];\n    for (let i = 0; i < 12; i++) {\n      let foo;\n      do {\n        foo = getRandomFruitsName();\n      } while (nameBase.find((item) => item === foo));\n\n      nameBase = [...nameBase, foo];\n\n      promiseList[\n        i\n      ] = fetch(\n        \"https://api.giphy.com/v1/gifs/translate?api_key=YgSMbNVTn9H2yFPan735riidNHosuAno&s=\" +\n          foo,\n        { mode: \"cors\" }\n      )\n        .then((response) => {\n          return response.json();\n        })\n        .then((response) => {\n          tempCards = [\n            ...tempCards,\n            { name: foo, url: response.data.images.original.url },\n          ];\n        })\n        .catch((e) => {\n          throw e;\n        });\n    }\n\n    Promise.all([...promiseList]).then(() => {\n      setCards(tempCards);\n    });\n  };\n\n  useEffect(() => {\n    loadCards();\n  }, []);\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        alignItems: \"center\",\n        flexDirection: \"column\",\n      }}\n    >\n      <p>Score: {score}</p>\n      <p>Record: {record}</p>\n      <div\n        className=\"board\"\n        style={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          flexWrap: \"wrap\",\n          width: \"90%\",\n        }}\n      >\n        {cards.map((item, key) => (\n          <Card\n            name={item.name}\n            imgUrl={item.url}\n            key={key}\n            processCardClick={processCardClick}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}